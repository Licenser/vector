[transforms.concat]
title = "Concat"
allow_you_to_description = "concat (substrings) of other fields to a new one"
beta = true
common = false
function_category = "shape"
input_types = ["log"]
output_types = ["log"]
requirements = {}

<%= render("_partials/fields/_component_options.toml", type: "transform", name: "concat") %>

[transforms.concat.options.target]
type = "string"
examples = ["root_field_name", "parent.child", "array[0]"]
field_path_notation = true
required = true
description = """\
The name for the new label.\
"""

[transforms.concat.options.joiner]
type = "string"
default = " "
examples = [" ", ",", "_", "+"]
description = """\
The string that is used to join all items.\
"""

[transforms.concat.options.items]
type = "[string]"
examples = [["first[..5]", "second[3..5]", "third[-5..]"]]
required = true
description = """\
A list of substring definitons in the format of source_field[start..end]. \
For both start and end negative values are counted from the end of the \
string.\
"""

[[transforms.concat.test_examples]]
label = "Basic"
body = """\
[[tests]]
  name = "test_concat"

  [[tests.inputs]]
    insert_at = "my_transform_id"
    type = "log"
    [tests.inputs.log_fields]
      first = "checking for errors"
      second = "in my config"
      third = "suits my style"

  [[tests.outputs]]
    extract_from = "my_transform_id"
    [[tests.outputs.conditions]]
      type = "check_fields"
      "dest_field_name.eq" = "check my style"\
"""

[[transforms.concat.examples]]
label = "Generic"
body = """\
Given the following input log event:

```json
{
  "message": "Hello world",
  "month": "12",
  "day": "25",
  "year": "2020"
}
```

And the following example configuration:

```toml
[transforms.concat_date]
  type = "concat"
  items = ["month", "day", "year"]
  target = "date"
  joiner = "/"
```

A log event will be output with the following structure:

```json
{
  "message": "Hello world",
  "date": "12/25/2020", // <-- new field
  "month": "12",
  "day": "25",
  "year": "2020"
}
```\
"""
